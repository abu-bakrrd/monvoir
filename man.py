import telebot
from telebot import types
from rembg import remove
from PIL import Image
from io import BytesIO

TOKEN = '7560565832:AAFQXWb1QWbyg3kAh056pFTUML3yS9xLbrA'
bot = telebot.TeleBot(TOKEN)

ALLOWED_USERS = [5644397480, 796365934]  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à user_id
user_images = {}
global_background = None  # –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
user_states = {} 


@bot.message_handler(commands=['start'])
def start(msg):
    if msg.from_user.id not in ALLOWED_USERS:
        return bot.reply_to(msg, "‚õîÔ∏è –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    bot.send_message(msg.chat.id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Monvoir Bot!\n\n–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–±—ä–µ–∫—Ç–æ–º, –∏ —è –Ω–∞–ª–æ–∂—É –µ–≥–æ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–æ–Ω.\n–î–ª—è –∑–∞–º–µ–Ω—ã —Ñ–æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /setbg")


@bot.message_handler(commands=['id'])
def send_user_id(msg):
    bot.send_message(msg.chat.id, f"üÜî –¢–≤–æ–π Telegram ID: `{msg.from_user.id}`", parse_mode="Markdown")


@bot.message_handler(commands=['setbg'])
def set_background_start(msg):
    if msg.from_user.id not in ALLOWED_USERS:
        return bot.reply_to(msg, "‚õîÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    bot.send_message(msg.chat.id, "üì∏ –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ñ–æ–Ω–∞.")
    user_images[msg.chat.id] = {'awaiting_bg': True}


@bot.message_handler(content_types=['photo'])
def handle_photo(msg):
    chat_id = msg.chat.id
    user_id = msg.from_user.id

    if user_id not in ALLOWED_USERS:
        return bot.reply_to(msg, "‚õîÔ∏è –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

    file_info = bot.get_file(msg.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    image = Image.open(BytesIO(downloaded_file)).convert("RGBA")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–Ω
    if chat_id in user_images and user_images[chat_id].get('awaiting_bg'):
        global global_background
        global_background = image
        user_images.pop(chat_id)
        return bot.send_message(chat_id, "‚úÖ –§–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if global_background is None:
        return bot.send_message(chat_id, "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏ —Ñ–æ–Ω —Å –ø–æ–º–æ—â—å—é /setbg")

    bot.send_message(chat_id, "üõ† –£–¥–∞–ª—è—é —Ñ–æ–Ω –∏ —Ä–∞–∑–º–µ—â–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    # –£–¥–∞–ª—è–µ–º —Ñ–æ–Ω
    buffered = BytesIO()
    image.save(buffered, format="PNG")
    no_bg = remove(buffered.getvalue())
    object_no_bg = Image.open(BytesIO(no_bg)).convert("RGBA")

    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º
    bg = global_background.copy()
    bg_w, bg_h = bg.size
    target_w, target_h = int(bg_w * 0.7), int(bg_h * 0.7)
    obj_w, obj_h = object_no_bg.size
    scale = min(target_w / obj_w, target_h / obj_h)
    new_size = (int(obj_w * scale), int(obj_h * scale))
    resized_object = object_no_bg.resize(new_size, Image.LANCZOS)
    pos = ((bg_w - new_size[0]) // 2, (bg_h - new_size[1]) // 2)
    bg.paste(resized_object, pos, resized_object)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    output = BytesIO()
    bg.save(output, format="PNG")
    output.seek(0)

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
    user_states[chat_id] = {
        'image': output,
        'step': 'price'
    }
    bot.send_message(chat_id, "üí∞ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É:")


@bot.message_handler(content_types=['text'])
def handle_text(msg):
    chat_id = msg.chat.id

    if chat_id not in user_states:
        return

    state = user_states[chat_id]

    if state['step'] == 'price':
        state['price'] = msg.text
        state['step'] = 'category'
        bot.send_message(chat_id, "üè∑ –í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, #–æ–¥–µ–∂–¥–∞):")
    
    elif state['step'] == 'category':
        state['category'] = msg.text
        state['step'] = 'brand'
        bot.send_message(chat_id, "üßµ –í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥:")
    
    elif state['step'] == 'brand':
        state['brand'] = msg.text
        state['step'] = 'size'
        bot.send_message(chat_id, "üìè –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, S, M, L, 40-44):")
    
    elif state['step'] == 'size':
        state['size'] = msg.text
        image = state['image']

        caption = (
            f"üñ§ <b>ùó†ùó¢ùó°ùó©ùó¢ùóúùó•</b> | –≠—Å—Ç–µ—Ç–∏–∫–∞ –≤ –∫–∞–∂–¥–æ–π –¥–µ—Ç–∞–ª–∏\n\n"
            f"‚ú® –í—Å—ë –≤ –ª—é–∫—Å–æ–≤–æ–º –∫–∞—á–µ—Å—Ç–≤–µ. –û—Ç–±–æ—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏, –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–µ –¥–æ –º–µ–ª–æ—á–µ–π.\n\n"
            f"üí∏ <b>–¶–µ–Ω–∞:</b> <code>{state['price']}</code>\n"
            f"üè∑ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {state['category']}\n"
            f"üëî <b>–ë—Ä–µ–Ω–¥:</b> {state['brand']}\n"
            f"üìè <b>–†–∞–∑–º–µ—Ä—ã:</b> {state['size']}\n\n"
            f"üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> 7‚Äì11 –¥–Ω–µ–π –ø–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É\n"
            f"üì¶ <i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ç–∏—Ä–∞–∂. –£—Å–ø–µ–π –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏!</i>"
        )


        image.seek(0)
        bot.send_photo(chat_id, image, caption=caption, parse_mode="HTML    ")
        user_states.pop(chat_id)


bot.polling(none_stop=True)